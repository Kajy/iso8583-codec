package codec

import org.scalatest.flatspec.AnyFlatSpec
import org.scalatest.matchers.must.Matchers.convertToAnyMustWrapper
import scodec.bits.HexStringSyntax

class ISO8583CodecSpec extends AnyFlatSpec {

  "ISO8583" should "decode bytes" in {
    // val hexString =
    //   hex"000001050100767e44810ee3a80110f5f4f7f3f9f583c793a5e2a6f3f7f0f5000000000000000000000000000000112914004979500280542008090049112925121129594281002706003286f4f3f3f4f5f1f5f4f2f0f0f8f3f6f0f9f6f7f0f0f0f0f7f8f4f9f5f9f7f8f4f9f5f9f0f0f0f7f6f2f2f0f3c1d4c1e9d6d54bc3d6d440404040404040404040404040c1d4e9d54bc3d6d461c2c9d3d34040e4e2050106017328004b01020102040840030202040203060200070201080c0000000000001102001202002202082402003303d4d7c23409d5f1c4c1f5f44040403502993606000000420af9f8f1f0f94040404040084009780a01000000000000000000ffffffffffffffff".bits

    val test = hex"12".bits
    println(test.slice(0, test.size))
    val hexStringReversal =
      hex"000001410410f67e46810ee3ac00000000420000000110f5f4f7f3f9f5e6a9e991a3d8f5f7f7f10000000000000130000000000130001129135403610000000028761453491129261211295542030000002706012120f5f8f9f7f7f4f5f5f8f9f7f7f9f8f7f9f8f5f0f0f0f1404040404040f1f0f3f8f1f5f0f6f0f1f540404040d3c5c3d3c5d9c340c4c1c340e5d3404040404040404040d5d6e8c1d340e2e4d940e5c9d34040c6d9050106017328003e01020102040250030299040202060200070201080c0000000000001102011202002202073303d4d7c23409c8d6e3f1c1f84040403502994205f3f5f5f3f0097809780a0100000000000000000014f0f0f0f2f9f7f8c3f0f0f0f0f0f0f0f0f0f0f0f0010000287611291354030000000121200000000000000000008354000000008354000000000000000000ffffffffffffffff".bits
    println(hexStringReversal.size)
    val result1 = ISO8583Codec.CODEC.decode(hexStringReversal)

    println(result1)
    1 mustBe 1
  }

}
